<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.recruit.posting_dao">
 
	<insert id="insertPosting" parameterType="com.sierp.web.domain.recruit.model.Posting" useGeneratedKeys="true" keyProperty="postingSeq">
		INSERT INTO posting(customer_seq, posting_title, status, end_ymdt, site_post_yn,
							company_seq, company_staff_seq, project_seq, work_type, recruit_type, recruit_man_count,
							need_academic_level, need_academic_level_value, need_free_grade, need_free_grade_value, limit_work_year_min, limit_work_year_max, limit_age_min, limit_age_max,
							recruit_contract_unit_value, reward_type, reward_min_price, reward_max_price, work_sido, work_sigungu, work_detail_addr,
							office_work_yn,office_home_work_yn,home_work_yn,job_info,recruit_info,manager_memo,main_manager_id,register_ymdt, register_manager_id)
	
		VALUES(	#{customerSeq},#{postingTitle},#{status},#{endYmdt},#{sitePostYn},
				#{companySeq},#{companyStaffSeq},#{projectSeq},#{workType}, #{recruitType},#{recruitManCount},
				#{needAcademicLevel},#{needAcademicLevelValue},#{needFreeGrade},#{needFreeGradeValue},#{limitWorkYearMin},#{limitWorkYearMax},#{limitAgeMin},#{limitAgeMax},
		      	#{recruitContractUnitValue},#{rewardType}, #{rewardMinPrice},#{rewardMaxPrice},#{workSido},#{workSigungu},#{workDetailAddr},
		       	#{officeWorkYn}, #{officeHomeWorkYn}, #{homeWorkYn}, #{jobInfo},#{recruitInfo},#{managerMemo},#{mainManagerId},#{registerYmdt},#{registerManagerId})
	</insert>
    
	<insert id="insertPostingCondition" parameterType="com.sierp.web.domain.recruit.model.PostingCondition" useGeneratedKeys="true" keyProperty="postingConditionSeq">
		INSERT INTO posting_condition(posting_seq, condition_type, advantage_seq, advantage_type, workmanship, workmanship_val)
		VALUES(#{postingSeq}, #{conditionType}, #{advantageSeq}, #{advantageType}, #{workmanship}, #{workmanshipVal})
	</insert> 


	<select id="selectPostingJoin" parameterType="int" resultType="com.sierp.web.domain.recruit.model.PostingJoin">
		SELECT  p.*, c.company_name , cs.name AS companyStaffName, pj.project_name
		FROM 	posting p, company c, company_staff cs, project pj
		WHERE 	posting_seq = #{postingSeq} 
		AND 	p.company_seq = c.company_seq 
		AND		p.company_staff_seq = cs.company_staff_seq 
		AND		p.project_seq = pj.project_seq 
	</select>

	<select id="selectPostingConditionJoinList" parameterType="int" resultType="com.sierp.web.domain.recruit.model.PostingConditionJoin">
		SELECT  pc.*, 
				a.advantage_name
		FROM 	posting_condition pc, advantage a
		WHERE 	pc.posting_seq = #{postingSeq} 
		AND 	pc.advantage_seq = a.advantage_seq
	</select>
	

	<select id="selectPostingListCount" parameterType="map" resultType="int">
		SELECT count(*)
		FROM 	posting p
		<where><include refid="postingSearchCondition"/></where>
	</select>
	
	<select id="selectPostingList" parameterType="map" resultType="com.sierp.web.domain.recruit.model.PostingSearch">
		SELECT 	p.*, 
				(SELECT company_name FROM company WHERE company_seq = p.company_seq) AS company_name
		FROM 	posting p
		
	 	<where><include refid="postingSearchCondition"/></where>
		LIMIT #{offset}, #{limit}
	</select>
	
    <sql id="postingSearchCondition">
		p.customer_seq = #{customerSeq}
		
		<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(postingYn)">
			AND p.site_post_yn = #{postingYn}
		</if>
		
		<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(mainManagerId)">
			AND p.main_manager_id = #{mainManagerId}
		</if>
		
		<if test="freelancerGradeValue != null">
			AND p.need_free_grade_value <![CDATA[ <= ]]> #{freelancerGradeValue}
		</if>
		
		<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(workType)">
			AND p.work_type = #{workType}
		</if>
		
		<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(recruitType)">
			AND p.recruit_type = #{recruitType}
		</if>
		
		<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(officeWorkYn)">
			AND p.office_workYn = #{officeWorkYn}
		</if>
		
		<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(officeHomeWorkYn)">
			AND p.office_home_work_yn = #{officeHomeWorkYn}
		</if>
		
		<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(homeWorkYn)">
			AND p.home_work_yn = #{homeWorkYn}
		</if>

		<if test="statusList.size > 0">
			AND p.status IN <foreach item="item"  index="index" collection="statusList" separator="," open="(" close=")" >'${item}'</foreach> 
		</if>
 
		<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(companyName)">
			AND p.company_seq IN (SELECT company_name FROM company WHERE company_name LIKE '%'||#{companyName}||'%')
		</if>
		
 		<if test="closeStartDate != null">
			AND p.end_ymdt <![CDATA[ >= ]]> #{closeStartDate}
		</if>
		<if test="closeEndDate != null">
			AND p.end_ymdt <![CDATA[ < ]]> #{closeEndDate}
		</if>
    </sql>

</mapper>