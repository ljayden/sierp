<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.company.company_dao">

	<insert id="insertCompany" parameterType="com.sierp.web.domain.company.model.Company" useGeneratedKeys="true" keyProperty="companySeq">
		INSERT INTO company(customer_seq, company_name, biz_no, sido,  si_gun_gu, detail_addr, customer_memo, register_ymdt, register_manager_id)
		VALUES (#{customerSeq}, #{companyName}, #{bizNo}, #{sido}, #{siGunGu}, #{detailAddr}, #{customerMemo}, #{registerYmdt}, #{registerManagerId})
	</insert>
	 
	<insert id="insertCompanyStaff" parameterType="com.sierp.web.domain.company.model.CompanyStaff" useGeneratedKeys="true" keyProperty="companyStaffSeq">
		INSERT INTO company_staff
		       (company_seq, name, phone_no, company_phone_no,  email, position, part, customer_memo, register_ymdt, register_manager_id)
		VALUES (#{companySeq}, #{name}, #{phoneNo}, #{companyPhoneNo}, #{email}, #{position}, #{part}, #{customerMemo}, #{registerYmdt}, #{registerManagerId})
	</insert>
 
 
 
    <select id="selectCompany" parameterType="map" resultType="com.sierp.web.domain.company.model.Company">
    	SELECT * FROM company
    	WHERE customer_seq = #{customerSeq}
    </select>

    <select id="selectCompanyBySeq" parameterType="map" resultType="com.sierp.web.domain.company.model.Company">
    	SELECT * FROM company WHERE company_seq = #{companySeq}
    </select>
    
    
	<select id="selectCompanyListCount" parameterType="map" resultType="int">
		SELECT 	count(*)
		FROM 	company c
		<where><include refid="companySearchCondition"/></where>
	</select>
	
	<select id="selectCompanyList" parameterType="map" resultType="com.sierp.web.domain.company.model.CompanySearch">
		SELECT  c.*
		FROM 	company c
	 	<where><include refid="companySearchCondition"/></where>
		LIMIT #{offset}, #{limit}
	</select>
	
    <sql id="companySearchCondition">
		c.customer_seq = #{customerSeq}  <!-- 		AND c.company_seq <![CDATA[ <> ]]> #{ customerSeq } -->
		<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(companyName)">
			AND c.company_name like CONCAT('%',#{companyName},'%')
		</if>
		
		<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(registerManagerId)">
			AND c.register_manager_id = #{registerManagerId}
		</if>
		
		<if test="sido != null">
			AND c.sido = #{sido}
		</if>
		
		<if test="siGunGu != null">
			AND c.sigungu = #{siGunGu}
		</if>
    </sql>
    
    
    
    
    
    <select id="selectCompanyStaffListByCompanySeq" parameterType="map" resultType="com.sierp.web.domain.company.model.CompanyStaff">
    	SELECT 	* 
    	FROM 	company_staff
    	WHERE	company_seq = #{companySeq}
    </select>
    

	<select id="selectCompanyStaffListCount" parameterType="map" resultType="int">
		SELECT 	count(*)
		FROM 	company c, company_staff cs
		<where><include refid="companyStaffSearchCondition"/></where>
	</select>
	
	<select id="selectCompanyStaffList" parameterType="map" resultType="com.sierp.web.domain.company.model.CompanyManagerSearch">
		SELECT  cs.*, c.company_name
		FROM 	company c, company_staff cs
	 	<where><include refid="companyStaffSearchCondition"/></where>
		LIMIT #{offset}, #{limit}
	</select>
	
    <sql id="companyStaffSearchCondition">
        cs.company_seq = c.company_seq
		AND c.customer_seq = #{customerSeq} 
		<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(companyName)">
			AND c.company_name like CONCAT('%',#{companyName},'%')
		</if>
		
		<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(companyStaffName)">
			AND cs.name like CONCAT('%',#{companyStaffName},'%')
		</if>
		
		<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(registerManagerId)">
			AND cs.register_manager_id = #{registerManagerId}
		</if>
		
		<if test="!@org.apache.commons.lang3.StringUtils@isEmpty(phoneNo)">
			AND (cs.phone_no like CONCAT('%',#{phoneNo},'%') OR cs.company_phone_no like CONCAT('%',#{phoneNo},'%') )
		</if>
    </sql>
    
    
    
    
    
    
    
    
    
    
    
    
        <!-- select id="select" parameterType="map" resultType=" ">
			
		  <![CDATA[>]]> 0 
					    <foreach collection="productCdList" item="productCd" open="(" separator="," close=")">
					    	#{productCd}
					    </foreach>
					    
		SELECT s.* FROM (
				SELECT 
						DATE_FORMAT( ymdt, '%Y%m%d%H%i%s') AS  , 
 
						(CASE @vsid WHEN sc._id THEN @rownum:=@ronum+1 ELSE @ronum:=1 END) rnum,
				         (@vsid:= sc._id) vsid  
				FROM 	stard sc
 
					INNER JOIN coupon c ON sp.coupon_id = c.coupon_id 
					, (SELECT @vsid:='', @rownum:=0 FROM DUAL) b
				WHERE
				 
				  AND 	sc.s_cd = 'NORMAL' 
			 ) s
		WHERE s.rnum = 1
    </select -->
    
</mapper>